name: CI workflow

on: [push, pull_request]

jobs:
  pre-commit:
    name: Run pre-commit checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3.1.0
      - uses: pre-commit/action@v2.0.3

  vale:
    name: Run Vale
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: errata-ai/vale-action@v1.4.2
        with:
          debug: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cdk_tests:
    name: Run the CDK stack unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 14
      - run: npm install
      - run: npm test
      - name: Upload coverage information
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage/

  lambda_tests:
    name: Run the Lambda function unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 14
      - run: npm --prefix ./lambda/ses-password-lambda install
      - run: npm --prefix ./lambda/ses-password-lambda test
      - name: Upload coverage information
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage/

  cdk_synth:
    name: Synthesize CloudFormation scripts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 12
      - run: npm install
      - run: npm --prefix ./lambda/ses-password-lambda install
      - run: npm install -g aws-cdk typescript ts-node
      - run: npm run build
      - run: cdk synth "*" --output cdk.out
      - uses: actions/upload-artifact@v2
        with:
          name: cdk.out
          path: cdk.out/*.template.json

  cfn_nag:
    name: Run cfn_nag checks
    runs-on: ubuntu-latest
    needs: [cdk_synth]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Run cfn_nag
        uses: stelligent/cfn_nag@master
        with:
          input_path: cdk.out

  taskcat:
    name: Run taskcat tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3.1.0
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 14

      - name: Install the AWS CDK and TypeScript packages
        run: npm install -g aws-cdk typescript ts-node

      - name: Install Node dependencies for the CDK stack
        run: npm install

      - name: Install Node dependencies for the Lambda function
        run: npm --prefix ./lambda/ses-password-lambda install --production=true

      - name: Build the CDK stack
        run: npm run build

      - name: Synthesize the CloudFormation template
        run: cdk synth "*" --context isTaskcatRun=true --output cdk.out

      - name: Configure the AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Run the taskcat tests
        uses: ShahradR/action-taskcat@v2
        with:
          commands: test run
          update_taskcat: true
          update_cfn_lint: true

  release:
    name: Create release
    runs-on: ubuntu-latest
    needs:
      [pre-commit, vale, cdk_tests, lambda_tests, cdk_synth, cfn_nag, taskcat]
    if: ${{ needs.pre-commit.result == 'success' }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
      - name: Release
        run: npx semantic-release
